{"mappings":"AAAA,MAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,OAAQJ,SAASC,cAAc,WAGjCI,QAAQC,IAAIR,GACZ,MAAMS,EAAQC,OAAOV,EAAKC,MAAMU,OAC1BC,EAAOF,OAAOV,EAAKI,KAAKO,OACxBE,EAASH,OAAOV,EAAKK,OAAOM,OAqBlC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KAEpCC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,EAAUd,MAAAe,IAEnBM,EAAO,C,SAACP,EAASd,MAAAe,GAAO,GAEzBA,EAAM,IAKVQ,MAAKC,IACJlB,QAAQC,IAAI,UAACiB,EAAeV,2BAAgBU,EAAAxB,UAAgB,IAC1CyB,OAAbC,IACLpB,QAAQC,IAAI,UAACmB,EAAeZ,8BAAeY,EAAA1B,UAAA,G,CAtC/CD,EAAKM,OAAOsB,iBAAiB,SAE7B,SAAsBC,GACpBA,EAAIC,iBAGJ,IAAI,IAAIC,EAAI,EAAGA,GAAKlB,EAAQkB,GAAI,EAAG,CAG/BjB,EAAciB,EAFOtB,GAASsB,EAAI,GAAKnB,GAGtCY,MAAK,EAACT,SAAEA,EAAUd,MAAA+B,MACjBzB,QAAQC,IAAI,uBAAqBO,QAAiBiB,MAAU,IAE7DN,OAAM,EAACX,SAAEA,EAAUd,MAAAgC,MAClB1B,QAAQC,IAAI,sBAAoBO,QAAiBkB,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  submit: document.querySelector(\"button\"),\n};\n\nconsole.log(refs);\nconst delay = Number(refs.delay.value);\nconst step = Number(refs.step.value);\nconst amount = Number(refs.amount.value);\n\nrefs.submit.addEventListener(\"click\", onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n\n  for(let i = 1; i <= amount; i +=1) {\n    const calculateDelay = delay + (i - 1) * step;\n    \n      createPromise(i, calculateDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n\n    setTimeout(()=> {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position,delay})\n      }\n    }, delay);\n\n  })\n\n  promise\n  .then(result => {\n    console.log(`Промис ${result.position} выполнен через ${result.delay}ms`)})\n  .catch(error => {\n    console.log(`Промис ${error.position} не выполнен через ${error.delay}ms`)\n  })\n\n}\n"],"names":["$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","submit","console","log","$47d4ff9957288465$var$delay","Number","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","result","catch","error","addEventListener","evt","preventDefault","i","delay1","delay2"],"version":3,"file":"03-promises.be60ae52.js.map"}