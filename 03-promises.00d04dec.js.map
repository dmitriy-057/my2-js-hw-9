{"mappings":"YAAA,IAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,OAAQJ,SAASC,cAAc,WAGjCI,QAAQC,IAAIR,GACZ,IAAMS,EAAQC,OAAOV,EAAKC,MAAMU,OAC1BC,EAAOF,OAAOV,EAAKI,KAAKO,OACxBE,EAASH,OAAOV,EAAKK,OAAOM,OAqBlC,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GAEpCC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUd,MAAAe,IAEnBM,EAAO,CAACP,WAASd,MAAAe,G,GAElBA,E,IAKJQ,MAAK,SAAAC,GACJlB,QAAQC,IAAI,UAAkDkB,OAAlCD,EAAOV,SAAS,oBAA4CW,OAAbD,EAAOxB,MAAM,M,IACtE0B,OAAb,SAAAC,GACLrB,QAAQC,IAAI,UAAoDkB,OAApCE,EAAMb,SAAS,uBAAiCW,OAAZE,EAAM3B,MAAM,M,IAtChFD,EAAKM,OAAOuB,iBAAiB,SAE7B,SAAsBC,GACpBA,EAAIC,iBAGJ,IAAI,IAAIC,EAAI,EAAGA,GAAKnB,EAAQmB,GAAI,EAAG,CAG/BlB,EAAckB,EAFOvB,GAASuB,EAAI,GAAKpB,GAGtCY,MAAK,SAAAS,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALhC,MACjBM,QAAQC,IAAI,uBAAwCkB,OAAfX,EAAS,QAAYW,OAANQ,EAAM,M,IAE3DP,OAAM,SAAAM,G,IAAGlB,EAAQkB,EAARlB,SAAUoB,EAAKF,EAALhC,MAClBM,QAAQC,IAAI,sBAAuCkB,OAAfX,EAAS,QAAYW,OAANS,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  submit: document.querySelector(\"button\"),\n};\n\nconsole.log(refs);\nconst delay = Number(refs.delay.value);\nconst step = Number(refs.step.value);\nconst amount = Number(refs.amount.value);\n\nrefs.submit.addEventListener(\"click\", onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n\n  for(let i = 1; i <= amount; i +=1) {\n    const calculateDelay = delay + (i - 1) * step;\n    \n      createPromise(i, calculateDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n\n    setTimeout(()=> {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position,delay})\n      }\n    }, delay);\n\n  })\n\n  promise\n  .then(result => {\n    console.log(`Промис ${result.position} выполнен через ${result.delay}ms`)})\n  .catch(error => {\n    console.log(`Промис ${error.position} не выполнен через ${error.delay}ms`)\n  })\n\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","submit","console","log","$ce04d3a99e08e73b$var$delay","Number","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","result","concat","catch","error","addEventListener","evt","preventDefault","i","param","delay1","delay2"],"version":3,"file":"03-promises.00d04dec.js.map"}